class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int> > result;
        if(nums.size()==0) return result;
        
        vector<int> list;
        dfs(result,list,nums);
        return result;
    }
    void dfs(vector<vector<int>> &result, vector<int> &list, vector<int> &nums) {
        if(list.size()==nums.size()) {
            result.push_back(list);
            return;
        }
        
        for(int i=0; i<nums.size(); i++) {
            if(find(list.begin(),list.end(),nums[i])!=list.end()) {
                continue;
            }
            
            list.push_back(nums[i]);
            dfs(result,list,nums);
            list.pop_back();
        }
    }
};
