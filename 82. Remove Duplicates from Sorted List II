/**
 * Definition of ListNode
 * class ListNode {
 * public:
 *     int val;
 *     ListNode *next;
 *     ListNode(int val) {
 *         this->val = val;
 *         this->next = NULL;
 *     }
 * }
 */
class Solution{
public:
    /**
     * @param head: The first node of linked list.
     * @return: head node
     */
    ListNode * deleteDuplicates(ListNode *head) {
        // write your code here
        
        ListNode *dummy=new ListNode(0);//初始化为NULL和不初始化都错误。这能这样
        if(head==NULL)
            return head;
        
        dummy->next=head;
        head=dummy;
        
        while(head->next!=NULL && head->next->next!=NULL){
            
            if(head->next->val==head->next->next->val){
                int Val=head->next->val;
                
                while(head->next->next!=NULL && head->next->next->val==Val){
                    head->next=head->next->next;
                }
                head->next=head->next->next;
            }else{
                    head=head->next;
            }
        }
        
        return dummy->next;
        
    }
};
