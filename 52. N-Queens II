class Solution {
public:
    int result=0; 
    int totalNQueens(int n) {
        if(n<1) return result;
        
        vector<int> cols;
        Search(cols,n);
        return result;
    }
    void Search(vector<int> &cols, int n) {
        if(cols.size()==n) {
            result++;
            return;
        }
        
        for(int i=0; i<n; i++) {
            if(!IsValid(cols,i)) {
                continue;
            }
            
            cols.push_back(i);
            Search(cols,n);
            cols.pop_back();
        }
        
    }
    bool IsValid(vector<int> &cols, int col) {
        int row=cols.size();
        for (int i=0; i<cols.size(); i++) {
            if(cols[i]==col)
                return false;
            else if (i-cols[i]==row-col)
                return false;
            else if (i+cols[i]==row+col)
                return false;
        }
        return true;
    }
};
