class Solution {
public:
    /**
     * @param nums: A list of integers
     * @return: An integer denotes the sum of max two non-overlapping subarrays
     */
    int maxTwoSubArrays(vector<int> nums) {
        // write your code here
        int s=nums.size();
        if(s<2) return 0;
        /*
        int result=INT_MIN;
        for(int i=1; i<s; i++) {
            int temp=FindMax(i,nums);
            result=max(result,temp);
        }
        */
        vector<int> left(s,0), right(s,0);
        int Max=INT_MIN, sum=0,minSum=0;
        for(int i=0; i<s; i++) {
            sum+=nums[i];
            Max=max(Max,sum-minSum);
            minSum=min(minSum,sum);
            left[i]=Max;
        }
        Max=INT_MIN;
        sum=0;
        minSum=0;
        for(int i=s-1; i>=0; i--) {
            sum+=nums[i];
            Max=max(Max,sum-minSum);
            minSum=min(minSum,sum);
            right[i]=Max;
        }
        int result=INT_MIN;
        for(int i=0;i<s-1;i++){
            result=max(result,left[i]+right[i+1]);
        }
        
        return result;
    }
    int FindMax(int order, vector<int> &nums) {
        int Max=INT_MIN;
        int s=nums.size();
        for(int i=0; i<order; i++) {
            int temp=0;
            for(int j=i; j<order; j++) {
                temp+=nums[j];
                Max=max(Max,temp);
            }
        }
        int result=Max;
        Max=INT_MIN;
        for(int i=order; i<s; i++) {
            int temp=0;
            for(int j=i; j<s; j++) {
                temp+=nums[j];
                Max=max(Max,temp);
            }
        }
        result+=Max;
        return result;
    }
};
